apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: maven-asoc-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc - this is where the clone repository is stored
      - name: componentName
        description: the name of the component/broker
  stepTemplate:
    env:
      - name: APPSCAN_APP_ID
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: APPSCAN_APP_ID
      - name: APPSCAN_APP_KEY_ID
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: APPSCAN_APP_KEY_ID
      - name: APPSCAN_API_KEY_SECRET
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: APPSCAN_API_KEY_SECRET
  steps:
    - name: asoc
      image: ibmcom/pipeline-base-image:2.6
      imagePullPolicy: Always
      env:
        - name: HOME
          value: "/root"
        - name: WORKSPACE
          value: "/workspace"
        - name: APPSCAN_NAME
          value: $(inputs.params.componentName)
      workingDir: /workspace
      command: ["/bin/bash", "-c"]
      args:
        - |
          export HOME=/root
          cd $HOME
          cp -R /workspace/otc-deploy .
          cp -R /workspace/pipeline-service .
          apt update && apt install -qq wget zip unzip
          mkdir /workspace/tmp
          export TMPDIR=/workspace/tmp
          set +x
          export WORKSPACE=$HOME
          export API_KEY_ID="$APPSCAN_APP_KEY_ID"
          export API_KEY_SECRET="$APPSCAN_API_KEY_SECRET"
          export APPSCAN_APP_ID="$APPSCAN_APP_ID"
          export SCAN_NAME="$APPSCAN_NAME"
          cd pipeline-service
          chmod +x ../otc-deploy/k8s/scripts/asoc/run_static_code_scan_maven.sh
          ../otc-deploy/k8s/scripts/asoc/run_static_code_scan_maven.sh
      volumeMounts:
        - mountPath: /workspace
          name: task-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)