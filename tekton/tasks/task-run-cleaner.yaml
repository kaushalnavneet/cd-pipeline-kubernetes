apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: run-cleaner
spec:
  params:
    - name: NODE_MODE
      default: 'true'
    - name: SHOW_RECORDS
      default: 'true'
    - name: HOME
      default: "/home/node"
  stepTemplate:
    env:
      - name: PIPELINE_BASIC_AUTH_TOKEN
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: PIPELINE_BASIC_AUTH_TOKEN
      - name: PIPELINE_CLEANER_IAM
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: PIPELINE_CLEANER_IAM
      - name: S3_STORAGE_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: S3_STORAGE_ACCESS_KEY
      - name: S3_STORAGE_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: S3_STORAGE_SECRET_KEY
      - name: CLOUDANT_IAM_API_KEY
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: CLOUDANT_IAM_API_KEY
      - name: CLOUDANT_URL
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: CLOUDANT_URL
      - name: PIPELINE_SERVER_URL
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: PIPELINE_SERVER_URL
      - name: PWS_URL
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: PWS_URL
      - name: HOURS_TO_KEEP 
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: HOURS_TO_KEEP
      - name: DAYS_TO_KEEP 
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: DAYS_TO_KEEP
      - name: S3_RESOURCES_BUCKET_NAME
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: S3_RESOURCES_BUCKET_NAME
      - name: S3_STORAGE_REGION
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: S3_STORAGE_REGION
      - name: S3_STORAGE_ENDPOINT
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: S3_STORAGE_ENDPOINT
      - name: CLEAN_TASK_MODULE
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: CLEAN_TASK_MODULE
      - name: REQUEST_TIMEOUT
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: REQUEST_TIMEOUT
  workspaces:
  - name: task-pvc
    mountPath: /workspace 
  steps:
  - name: pipeline-clean-step
    image: us.icr.io/devopsotc/pipeline-cleaner:latest
    env:
      - name: NODE_MODE
        value: $(params.NODE_MODE)
      - name: SHOW_RECORDS
        value: $(params.SHOW_RECORDS)
      - name: HOME
        value: $(params.HOME)
    workingDir: /workspace
    command: ["/bin/bash", "-c"]
    args:
      - | 
        cd $HOME
        echo "Start cleaning"
        node ./cleaner.js
