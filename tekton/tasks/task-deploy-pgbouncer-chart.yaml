apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy-pgbouncer
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc - this is where the cloned repository will be stored
      - name: clusterName
      - name: deployBaseImage
        default: us.icr.io/opentoolchain/cd-deploy-base:deploy
      - name: environment
        default: 'development'
      - name: skipDeploy
        default: 'true'
      - name: chartNamespace
        default: opentoolchain
      - name: script_directory
  stepTemplate:
    env:
      - name: API
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: API
      - name: REGION
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: REGION
      - name: API_KEY
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: DEPLOY_API_KEY
      - name: REGISTRY_API_KEY
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: REGISTRY_API_KEY
      - name: TOOLCHAIN_ID
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: TOOLCHAIN_ID
      - name: VAULT_SIDEKICK_ROLE_ID
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: VAULT_SIDEKICK_ROLE_ID
      - name: VAULT_SIDEKICK_SECRET_ID
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: VAULT_SIDEKICK_SECRET_ID
  steps:
  - name: deploy
    image: $(inputs.params.deployBaseImage)
    imagePullPolicy: Always
    env:
      - name: HOME
        value: "/root"
      - name: SKIP
        value: $(inputs.params.skipDeploy)
      - name: CLUSTER_NAME
        value: $(inputs.params.clusterName)
      - name: ENVIRONMENT
        value: $(inputs.params.environment)
      - name: CHART_NAMESPACE
        value: $(inputs.params.chartNamespace)
      - name: SCRIPT_DIRECTORY
        value: $(inputs.params.script_directory)
    workingDir: /workspace
    command: ["/bin/bash", "-c"]
    args:
      - | 
        export HOME=/root
        [ -f /root/.nvm/nvm.sh ] && source /root/.nvm/nvm.sh
        set -e
        set -x
        if [ "${SKIP}" == true ]; then
          echo "Skipping Deploy for $CLUSTER_NAME"
          exit 0
        fi

        ibmcloud config --check-version=false
        ibmcloud plugin install -f container-service
        set +x
        ibmcloud login -a ${API} -r ${REGION} --apikey ${API_KEY}
        set -x
        ibmcloud ks cluster config  --cluster ${CLUSTER_NAME}
        set -e
        chmod a+x ${SCRIPT_DIRECTORY}/scripts/deploy_pgbouncer_tekton.sh
        bash ${SCRIPT_DIRECTORY}/scripts/deploy_pgbouncer_tekton.sh
    volumeMounts:
      - mountPath: /workspace
        name: task-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
