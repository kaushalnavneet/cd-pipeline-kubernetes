apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: asoc-send-slack-task
spec:
  inputs:
    params:
      - name: task-pvc
        description: the output pvc - this is where the clone repository is stored
      - name: componentDockerImage
        description: name of the component latest docker image
      - name: componentName
        description: the name of the component/broker
  stepTemplate:
    env:
      - name: APPSCAN_APP_ID
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: APPSCAN_APP_ID
      - name: APPSCAN_APP_KEY_ID
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: APPSCAN_APP_KEY_ID
      - name: APPSCAN_API_KEY_SECRET
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: APPSCAN_API_KEY_SECRET
      - name: APPSCAN_API_KEY_SECRET
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: APPSCAN_API_KEY_SECRET
      - name: SLACK_WEBHOOK
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: SLACK_WEBHOOK
  steps:
    - name: slack
      image: $(inputs.params.componentDockerImage)
      imagePullPolicy: Always
      env:
        - name: HOME
          value: "/home/node"
        - name: WORKSPACE
          value: "/workspace"
        - name: APPSCAN_NAME
          value: $(inputs.params.componentName)
      workingDir: /workspace
      command: ["/bin/bash", "-c"]
      args:
        - |
          #!/bin/bash
          export HOME=/home/node
          cd /home/node
          cp -R /workspace/otc-deploy .
          export WORKSPACE=$HOME
          export BRANCH_NAME="integration"
          export API_KEY_ID="$APPSCAN_APP_KEY_ID"
          export API_KEY_SECRET="$APPSCAN_API_KEY_SECRET"
          export APPSCAN_APP_ID="$APPSCAN_APP_ID"
          export SCAN_NAME="$APPSCAN_NAME"
          export SLACK_WEBHOOK="$SLACK_WEBHOOK"
          set +x

          chmod +x ./otc-deploy/k8s/scripts/asoc/send_report_to_slack.sh
          ./otc-deploy/k8s/scripts/asoc/send_report_to_slack.sh
      volumeMounts:
        - mountPath: /workspace
          name: task-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)