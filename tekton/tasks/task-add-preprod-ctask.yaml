apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: add-preprod-ctask
spec:
  params:
    - name: deployBaseImage
      default: us.icr.io/opentoolchain/cd-deploy-base:deploy
    - name: snUrl
      default: 'https://watson.service-now.com'
    - name: e2eToolchainId
      default: 'd5c0676c-55ed-4c25-b763-60b7afd64c87'
    - name: e2eApplication
      default: 'Pipeline'
    - name: e2eBuildId
      default: ''
  stepTemplate:
    env:
      - name: CR_ID
        valueFrom:
          configMapKeyRef:
            name: cd-config
            key: CR_ID
      - name: API_KEY
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: API_KEY
      - name: SN_TOKEN
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: SN_TOKEN
  workspaces:
  - name: task-pvc
    mountPath: /workspace
  steps:
  - name: add-preprod-ctask
    image: $(params.deployBaseImage)
    imagePullPolicy: IfNotPresent
    env:
      - name: HOME
        value: "/root"
      - name: SN_URL
        value: $(params.snUrl)
      - name: E2E_TOOLCHAIN_ID
        value: $(params.e2eToolchainId)
      - name: E2E_APPLICATION
        value: $(params.e2eApplication)
      - name: E2E_BUILD_ID
        value: $(params.e2eBuildId)
    workingDir: /workspace
    command: ["/bin/bash", "-c"]
    args:
      - |
        export HOME=/root
        [ -f /root/.nvm/nvm.sh ] && source /root/.nvm/nvm.sh
        set -eo pipefail
        echo "Given E2E_BUILD_ID: ${E2E_BUILD_ID}"
        ibmcloud config --check-version=false
        echo Logging into ibmcloud
        ibmcloud login -a cloud.ibm.com -r us-south --apikey ${API_KEY}
        BEARER=$( ibmcloud iam oauth-tokens --output json | jq -r .iam_token )

        SYSTEM="continuous-delivery-pipeline"

        if [[ ! "$CR_ID" ]]; then
            echo "Failed: $RESPONSE"
            exit 1
        fi

        echo "ServiceNow change request opened: $SN_URL/nav_to.do?uri=change_request.do?sysparm_query=number=$CR_ID"
        echo "Checking ServiceNow change request state..."

        # add mon01 E2E tests via a CTASK
        echo "Querying DOI. Toolchain: $E2E_TOOLCHAIN_ID Application: $E2E_APPLICATION"
        curl -s -X GET "https://dlms.us-south.devopsinsights.cloud.ibm.com/v3/toolchainids/$E2E_TOOLCHAIN_ID/buildartifacts/$E2E_APPLICATION/builds?limit=1000&&sort_order=desc" \
          -H  "accept: */*" \
          -H "Authorization: $BEARER" >/workspace/tmp_doi.json
        BUILD_ID=$( jq -r '.[].build_id' /workspace/tmp_doi.json | grep integration | head -1 )
        E2E_BUILD_ID=${E2E_BUILD_ID:-$BUILD_ID}
        E2E_STAGE_ENVIRONMENT=mon01
        echo "Using DOI build id: $E2E_BUILD_ID (latest $BUILD_ID)"
        SUMMARY=$( curl -s -X GET "https://dlms.us-south.devopsinsights.cloud.ibm.com/v3/toolchainids/$E2E_TOOLCHAIN_ID/buildartifacts/$E2E_APPLICATION/builds/$E2E_BUILD_ID/summaries?latest_only=true&environment_name=$E2E_STAGE_ENVIRONMENT" \
          -H  "accept: */*" \
          -H "Authorization: $BEARER" | jq . | jq --raw-input --slurp  )
        cat - >"$TMP" <<HERE
        {
          "required": "required",
          "system": "$SYSTEM",
          "shortdescription": "Staging test results",
          "description": "Toolchain: $E2E_TOOLCHAIN_ID\nApplication: $E2E_APPLICATION\nBuild id: $E2E_BUILD_ID\nEnvironment: $E2E_STAGE_ENVIRONMENT",
          "data": $SUMMARY
        }
        HERE
        RESPONSE=$(curl --request POST -H "Authorization:Bearer $SN_TOKEN" \
            -H "updated_by: $ASSIGNED_TO" \
            -H "Accept:application/json" \
            -H "Content-Type:application/json" \
            --data "@$TMP" "$SN_URL/api/ibmwc/v2/change/$CR_ID/task/create" \
            --silent --show-error)

        CTASK_ID=$(jq --raw-output ".result.number | select (.!=null)" <<< "$RESPONSE")

        if [[ ! "$CTASK_ID" ]]; then
            echo "Failed: $RESPONSE"
            exit 1
        fi

        echo Created task $CTASK_ID. Closing...

        PAYLOAD=$(jq --null-input "$(cat <<HERE
        {
            state: "Closed"
        }
        HERE
        )")

        RESPONSE=$(curl --request PUT -H "Authorization:Bearer $SN_TOKEN" \
            -H "updated_by: $ASSIGNED_TO" \
            -H "Accept:application/json" \
            -H "Content-Type:application/json" \
            --data "$PAYLOAD" "$SN_URL/api/ibmwc/v2/change/$CR_ID/task/$CTASK_ID/update" \
            --silent --show-error)

        CTASK_ID=$(jq --raw-output ".result.number | select (.!=null)" <<< "$RESPONSE")

        if [[ ! "$CTASK_ID" ]]; then
            echo "Failed: $RESPONSE"
            exit 1
        fi
