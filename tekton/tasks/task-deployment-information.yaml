apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deployment-information
spec:
  params:
    - name: source_directory
    - name: deployBaseImage
      default: us.icr.io/opentoolchain/cd-deploy-base:deploy
    - name: prodRepos
      default: 'None'
  stepTemplate:
    env:
      - name: IDS_TOKEN
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: IDS_TOKEN
  workspaces:
  - name: task-pvc
    mountPath: /workspace 
  steps:
  - name: get-deployment-information
    image: $(params.deployBaseImage)
    imagePullPolicy: Always
    env:
      - name: HOME
        value: "/root"
      - name: SOURCE_DIRECTORY
        value: $(params.source_directory)
      - name: PROD_REPOS
        value: $(params.prodRepos)
    workingDir: /workspace
    command: ["/bin/bash", "-c"]
    args:
      - | 
        export HOME=/root
        [ -f /root/.nvm/nvm.sh ] && source /root/.nvm/nvm.sh

        if [ -r $SOURCE_DIRECTORY/cr/components.txt ]; then
          PROD_REPOS="$( <$SOURCE_DIRECTORY/cr/components.txt )"
        fi
        
        mkdir -p tmp_info ; cd tmp_info
        FILE=/workspace/deployment.txt

        if [ "$PROD_REPOS" = None ]; then
            echo "Pipeline microservice configuration updates" >$FILE
            exit 0
        fi

        printf 'Delivering changes for:\\n' >$FILE

        IFS=',' read -ra REPOS <<<$PROD_REPOS
        for REPO in ${REPOS[@]}; do
            echo "finding changes for $REPO"
            REPO_URL=https://github.ibm.com/org-ids/${REPO}
            REPO_URL_AUTH=https://x-oauth-basic:$IDS_TOKEN@github.ibm.com/org-ids/${REPO}.git
            git clone -b integration "$REPO_URL_AUTH"
            pushd $REPO
            LAST_TAG=$( git tag --list 'prod-*' | tail -1 )
            OLD_DEPLOY=$( git rev-list -n 1 $LAST_TAG )
            REV=$( git rev-list -n 1 HEAD )
            if [ $OLD_DEPLOY = $REV ]; then
                printf "$REPO : Configuration update/redeploy only"'\\n' >>$FILE
            else
                printf "$REPO : ${REPO_URL}/compare/${LAST_TAG}...${REV}"'\\n' >>$FILE
            fi
            popd
        done

        # add devops config commit
        REPO=devops-config
        echo "finding changes for $REPO"
        REPO_URL=https://github.ibm.com/ids-env/${REPO}
        REPO_URL_AUTH=https://x-oauth-basic:$IDS_TOKEN@github.ibm.com/ids-env/${REPO}.git
        git clone "$REPO_URL_AUTH"
        pushd $REPO
        REV=$( git rev-list -n 1 HEAD )
        printf '\\n'"config repo $REPO : ${REPO_URL}/commits/${REV}"'\\n' >>$FILE
        popd


