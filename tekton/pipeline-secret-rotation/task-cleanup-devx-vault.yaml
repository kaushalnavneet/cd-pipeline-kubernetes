apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup-devx-vault
spec:
  params:
    - name: environment
    - name: config_directory
    - name: script_directory
  stepTemplate:
    env:
      - name: PIPELINE_RUN_URL
        valueFrom:
          fieldRef:
            fieldPath: metadata.annotations['devops.cloud.ibm.com/pipeline-run-url']
      - name: ROLE_ID
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: VAULT_SIDEKICK_ROLE_ID
      - name: GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: IDS_TOKEN
      - name: SECRET_ID
        valueFrom:
          secretKeyRef:
            name: cd-secret
            key: VAULT_SIDEKICK_SECRET_ID
  workspaces:
  - name: output
    mountPath: /workspace 
  steps:
  - name: cleanup-vault
    image: icr.io/continuous-delivery/pipeline/tekton/common-tools:2.0.0
    imagePullPolicy: IfNotPresent
    env:
      - name: HOME
        value: "/root"
      - name: ENVIRONMENT
        value: $(params.environment)
      - name: CONFIG_DIRECTORY
        value: $(params.config_directory)
      - name: SCRIPT_DIRECTORY
        value: $(params.script_directory)
      - name: DEVX_SECRET_PATH
        value: "pipeline.pipeline-support-service.vault.secretPaths"
      - name: COMMON_SECRET_PATH
        value: "pipeline.common.vaultcommon.secretPaths"
    workingDir: /workspace
    command: ["/bin/bash", "-c"]
    args:
      - |
        set -e -o pipefail

        . ${SCRIPT_DIRECTORY}/scripts/rotation/rotate_api_secret.sh

        # cleanup pipeline-support-service
        #pipeline_support_vault_path=$(get_vault_path "${CONFIG_DIRECTORY}/environments/${ENVIRONMENT}/values.yaml" ${DEVX_SECRET_PATH} pipeline-support-service)
        #echo "pipeline-support-service vault path: ${pipeline_support_vault_path}"
        #pipeline_support_tempfile=$(mktemp)
        #read_vault_path ${pipeline_support_vault_path} ${pipeline_support_tempfile}
        #remove_previous_pipeline_support_service ${pipeline_support_tempfile}
        #updating_vault ${pipeline_support_tempfile} ${pipeline_support_vault_path}
        #rm ${pipeline_support_tempfile}
        
        # update shared pipeline secret
        pipeline_common_vault_path=$(get_vault_path "${CONFIG_DIRECTORY}/environments/${ENVIRONMENT}/values.yaml" ${COMMON_SECRET_PATH} pipeline-common)
        echo "common vault path: ${pipeline_common_vault_path}"
        pipeline_common_tempfile=$(mktemp)
        read_vault_path ${pipeline_common_vault_path} ${pipeline_common_tempfile}
        remove_previous_pipeline_common ${pipeline_common_tempfile}
        updating_vault ${pipeline_common_tempfile} ${pipeline_common_vault_path}
        rm ${pipeline_common_tempfile}