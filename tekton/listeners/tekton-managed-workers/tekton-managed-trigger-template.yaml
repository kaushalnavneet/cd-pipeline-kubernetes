apiVersion: tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: tekton-managed-trigger-template
spec:
  params:
    - name: update_agent
    - name: update_kata
    - name: environment
    - name: region
    - name: clusterName1
    - name: skipDeploy1
    - name: clusterName2
    - name: skipDeploy2
    - name: clusterName3
    - name: skipDeploy3
    - name: clusterName4
      default: ''
    - name: skipDeploy4
      default: 'true'
    - name: regionName
    - name: target_domain
      default: 'devops.cloud.ibm.com'
    - name: set_worker_offline
      default: 'true'
    - name: run_commands
      default: 'false'

    # CD integration
    - name: api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: apikey
      description: the ibmcloud api key
    - name: toolchainRegion
      description: the ibmcloud region containing the toolchain referencing the repository
      default: us-south
    - name: resourceGroup
      description: the ibmcloud resource group containing the toolchain referencing the repository
      default: default
    - name: toolchainId
      description: The IBM Cloud Kubernetes cluster region

  resourcetemplates:
    # CD context defined as a configmap and secret because it is immutable information
    - apiVersion: v1
      kind: ConfigMap
      metadata:
        name: cd-config
      data:
        API: $(params.api)
    - apiVersion: v1
      kind: Secret
      metadata:
        name: cd-secret
      type: Opaque
      stringData:
        API_KEY: $(params.API_KEY)
        DEPLOY_API_KEY: $(params.API_KEY)
        IDS_TOKEN: $(params.IDS_TOKEN)

    # k8s resources to be able to pull docker image from a specific container registry
    - apiVersion: v1
      kind: Secret
      metadata:
        name: private-registry-secret
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: $(params.dockerconfigjson)
    - apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: docker-build-sa
      imagePullSecrets:
        - name: private-registry-secret
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: tekton-managed-$(uid)-pvc
      spec:
        resources:
          requests:
            storage:  15Gi
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        #generateName: $(params.source_branch)-base-run
        name: $(params.environment)-tekton-$(uid)
        labels:
          triggertemplated: "true"
      spec:
        pipelineRef:
          name: pipeline-deploy-tekton-managed
        workspaces:
          - name: pipeline-pvc
            persistentVolumeClaim:
              claimName: tekton-managed-$(uid)-pvc
        serviceAccountName: docker-build-sa
        params:
          - name: update_agent
            value: $(params.update_agent)
          - name: update_kata
            value: $(params.update_kata)
          - name: region
            value: $(params.region)
          - name: set_worker_offline
            value: $(params.set_worker_offline)
          - name: run_commands
            value: $(params.run_commands)
          - name: target_domain
            value: $(params.target_domain)
          - name: clusterName1
            value: $(params.clusterName1)
          - name: skipDeploy1
            value: $(params.skipDeploy1)
          - name: clusterName2
            value: $(params.clusterName2)
          - name: skipDeploy2
            value: $(params.skipDeploy2)
          - name: clusterName3
            value: $(params.clusterName3)
          - name: skipDeploy3
            value: $(params.skipDeploy3)
