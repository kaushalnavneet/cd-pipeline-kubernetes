apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: run-base
spec:
  inputs:
    params:
      - name: accountApiKey1308775
      - name: accountApiKey1416501
      - name: accountRegion
        default: us-south
      - name: idsToken
      - name: registryUrl
        default: us.icr.io
      - name: registryNamespace
        default: opentoolchain
      - name: imageName
        default: ''
      - name: imageTag
      - name: imageUrl
      - name: runBaseImage
      - name: dockerFile
      - name: buildCluster
        default: otc-dal12-build
      - name: dockerUsername
        default: iamapikey
      - name: dockerPassword
      - name: operatorSDK
        default: ''
      - name: extraDockerOpts
        default: --no-cache
      - name: idsUser
        default: idsorg
      - name: idsToken
      - name: artifactoryToken
        default: ''
      - name: artifactoryId
        default: ''
      - name: consoleAuthToken
        default: ''
      - name: gitCommit
        default: ''
  steps:
  - name: run-base
    image: $(inputs.params.runBaseImage)
    imagePullPolicy: Always
    env:
      - name: API_KEY
        value: $(inputs.params.accountApiKey1308775)
      - name: IMAGE_URL
        value: $(inputs.params.imageUrl)
      - name: IMAGE_REGISTRY
        value: $(inputs.params.registryUrl)
      - name: IMAGE_NAMESPACE
        value: $(inputs.params.registryNamespace)
      - name: IMAGE_NAME
        value: $(inputs.params.imageName)
      - name: DOCKERFILE
        value: $(inputs.params.dockerFile)
      - name: DOCKER_IMAGE
        value: $(inputs.params.runBaseImage)
      - name: BUILD_CLUSTER
        value: $(inputs.params.buildCluster)
      - name: APPLICATION_VERSION
        value: $(inputs.params.imageTag)
      - name: OPERATOR_SDK
        value: $(inputs.params.operatorSDK)
      - name: EXTRA_DOCKER_OPTS
        value: $(inputs.params.extraDockerOpts)
      - name: IDS_USER
        value: $(inputs.params.idsUser)
      - name: IDS_TOKEN
        value: $(inputs.params.idsToken)
      - name: ARTIFACTORY_TOKEN_BASE64
        value: $(inputs.params.artifactoryToken)
      - name: ARTIFACTORY_ID
        value: $(inputs.params.artifactoryId)
      - name: CONSOLE_AUTH_TOKEN
        value: $(inputs.params.consoleAuthToken)
      - name: ACCOUNT_REGION
        value: $(inputs.params.accountRegion)
      - name: DOCKER_USERNAME
        value: $(inputs.params.dockerUsername)
      - name: DOCKER_PASSWORD
        value: $(inputs.params.dockerPassword)
      - name: GIT_COMMIT
        value: $(inputs.params.gitCommit)
    command: ["/bin/bash", "-c"]
    args:
      - | 
        set -e
        export HOME=/root && [ -f /root/.nvm/nvm.sh ] && chmod +x /root/.nvm/nvm.sh && source /root/.nvm/nvm.sh
        echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
        ls -al
        cd /work
        ls -al
        echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
        chmod u+x /work/scripts/pipeline_build_tek.sh
        "$_"
  - name: run-va
    image: $(inputs.params.runBaseImage)
    imagePullPolicy: Always
    env:
      - name: API_KEY
        value: $(inputs.params.accountApiKey1416501)
      - name: ACCOUNT_REGION
        value: $(inputs.params.accountRegion)
      - name: IMAGE_URL
        value: $(inputs.params.imageUrl)
      - name: IMAGE_REGISTRY
        value: $(inputs.params.registryUrl)
      - name: IMAGE_NAMESPACE
        value: $(inputs.params.registryNamespace)
      - name: IMAGE_NAME
        value: $(inputs.params.imageName)
      - name: DOCKERFILE
        value: $(inputs.params.dockerFile)
      - name: DOCKER_IMAGE
        value: $(inputs.params.runBaseImage)
      - name: DOCKER_USERNAME
        value: $(inputs.params.dockerUsername)
      - name: DOCKER_PASSWORD
        value: $(inputs.params.dockerPassword)
      - name: APPLICATION_VERSION
        value: $(inputs.params.imageTag)
    command: ["/bin/bash", "-c"]
    args:
      - | 
        set -e
        export HOME=/root && [ -f /root/.nvm/nvm.sh ] && chmod +x /root/.nvm/nvm.sh && source /root/.nvm/nvm.sh
        echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
        cd /work
        ls -al
        echo ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
        chmod u+x /work/scripts/pipeline_va_tek.sh
        "$_"
