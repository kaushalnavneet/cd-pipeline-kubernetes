apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task-create-cr
spec:
  params:
    - name: cr-assigned-to
    - name: cr-backout-plan
    - name: cr-description
    - name: cr-purpose
    - name: cr-skip
    - name: ctask-description
    - name: ctask-short-description
    - name: ctask-test-results
    - name: slack-icon
    - name: slack-start-description
    - name: slack-username
    - name: sn-region
    - name: sn-url
    - name: zone-names
  workspaces:
    - name: task-pvc
      mountPath: /workspace
  steps:
    - name: create-cr
      image: ibmcom/pipeline-base-image:2.6
      imagePullPolicy: Always
      env:
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              name: cd-secret
              key: GIT_TOKEN
        - name: SKIP
          value: $(params.cr-skip)
        - name: SLACK_WEBHOOK
          valueFrom:
            secretKeyRef:
              name: cd-secret
              key: SLACK_WEBHOOK
        - name: SN_ASSIGNED_TO
          value: $(params.cr-assigned-to)
        - name: SN_BACKOUT_PLAN
          value: $(params.cr-backout-plan)
        - name: SN_CTASK_DESCRIPTION
          value: $(params.ctask-description)
        - name: SN_CTASK_FILE
          value: test-results.txt
        - name: SN_CTASK_SHORTDESCRIPTION
          value: $(params.ctask-short-description)
        - name: SN_DESCRIPTION
          value: $(params.cr-description)
        - name: SN_ICON
          value: $(params.slack-icon)
        - name: SN_OPEN_NOTICE_TEXT
          value: $(params.slack-start-description)
        - name: SN_PURPOSE
          value: $(params.cr-purpose)
        - name: SN_REGION
          value: $(params.sn-region)
        - name: SN_SLACK_USERNAME
          value: $(params.slack-username)
        - name: SN_TEST_RESULTS
          value: $(params.ctask-test-results)
        - name: SN_TOKEN
          valueFrom:
            secretKeyRef:
              name: cd-secret
              key: SN_TOKEN
        - name: SN_URL
          value: $(params.sn-url)
        - name: ZONE_NAMES
          value: $(params.zone-names)
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail
          if [ "${SKIP}" == true ]; then
            echo "Skipping CR"
            exit 0
          fi
          export SN_OPEN_NOTICE_TEXT="${SN_OPEN_NOTICE_TEXT} [${ZONE_NAMES}]"
          cd /workspace
          git clone https://${GIT_TOKEN}@github.ibm.com/org-ids/otc-deploy.git
          echo $SN_TEST_RESULTS > $SN_CTASK_FILE
          echo "creating ticket..."
          chmod u+x ./otc-deploy/k8s/scripts/snticket/create_sn_ticket.sh
          . "$_"
          echo
          echo
          echo "creating ctask..."
          chmod u+x ./otc-deploy/k8s/scripts/snticket/create_ctask.sh
          . "$_"
