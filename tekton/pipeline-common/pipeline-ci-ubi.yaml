apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-ci-ubi
spec:
  params:
    - name: source-repo
    - name: source-branch
    - name: source-directory
    - name: charts-repo
    - name: charts-branch
    - name: charts-directory
    - name: config-repo
    - name: config-branch
    - name: config-directory
    - name: image-url
    - name: environment
    - name: cluster-name
    - name: cluster-namespace
    - name: skip-va
    - name: skip-deploy
    - name: docker-file
      default: ''
    - name: run-base-image
      default: us.icr.io/opentoolchain/cd-build-base:nodejs12ubi
    - name: artifactory-token-base64
      default: ''
    - name: artifactory-id
      default: ''
    - name: console-auth-token
      default: ''
    - name: helm-options
      default: ''
  workspaces:
  - name: pipeline-pvc
  tasks:
    - name: clone-source-repo
      taskRef:
        name: git-clone-repo
      params:
        - name: repository
          value: $(params.source-repo)
        - name: branch
          value: $(params.source-branch)
        - name: directory-name
          value: $(params.source-directory)
      workspaces:
      - name: output
        workspace: pipeline-pvc 
    - name: clone-charts-repo
      runAfter: [clone-source-repo]
      taskRef:
        name: git-clone-repo
      params:
        - name: repository
          value: $(params.charts-repo)
        - name: branch
          value: $(params.charts-branch)
        - name: directory-name
          value: $(params.charts-directory)
      workspaces:
      - name: output
        workspace: pipeline-pvc 
    - name: clone-config-repo
      runAfter: [clone-charts-repo]
      taskRef:
        name: git-clone-repo
      params:
        - name: repository
          value: $(params.config-repo)
        - name: branch
          value: $(params.config-branch)
        - name: directory-name
          value: $(params.config-directory)
      workspaces:
      - name: output
        workspace: pipeline-pvc 
    - name: build
      runAfter: [clone-config-repo,clone-charts-repo]
      taskRef:
        name:  run-base
      params:
        - name: source-directory
          value: $(params.source-directory)
        - name: image-url
          value: $(params.image-url)
        - name: run-base-image
          value: $(params.run-base-image)
        - name: docker-file
          value: $(params.docker-file)
        - name: image-tag
          value: ''
        - name: environment
          value: $(params.environment)
        - name: artifactory-token-base64
          value: $(params.artifactory-token-base64)
        - name: artifactory-id
          value: $(params.artifactory-id)
        - name: console-auth-token
          value: $(params.console-auth-token)
      workspaces:
      - name: task-pvc
        workspace: pipeline-pvc 
    - name: build-va
      runAfter: [build]
      taskRef:
        name: run-va
      params:
        - name: source-directory
          value: $(params.source-directory)
        - name: image-url
          value: $(params.image-url)
        - name: run-base-image
          value: us.icr.io/opentoolchain/cd-build-base:nodejs12ubi
        - name: image-tag
          value: ''
        - name: skip-va
          value: $(params.skip-va)
      workspaces:
      - name: task-pvc
        workspace: pipeline-pvc 
    - name: deploy
      runAfter: [build-va]
      taskRef:
        name: deploy
      params:
        - name: source-directory
          value: $(params.source-directory)
        - name: image-url
          value: $(params.image-url)
        - name: image-tag
          value: ''
        - name: environment
          value: $(params.environment)
        - name: skip-deploy
          value: $(params.skip-deploy)
        - name: cluster-name
          value: $(params.cluster-name)
        - name: cluster-namespace
          value: $(params.cluster-namespace)
        - name: helm-options
          value: $(params.helm-options)
      workspaces:
      - name: task-pvc
        workspace: pipeline-pvc 
