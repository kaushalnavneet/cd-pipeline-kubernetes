###############################################################################
# Licensed Materials - Property of IBM
# (c) Copyright IBM Corporation 2017, 2021. All Rights Reserved.
#
# Note to U.S. Government Users Restricted Rights:
# Use, duplication or disclosure restricted by GSA ADP Schedule
# Contract with IBM Corp.
###############################################################################
## 
# used to build travis-worker image
##
FROM golang:1.16.2-alpine3.13

ARG OPERATOR_RELEASE_VERSION=v0.16.0
ENV LANG=en_US.UTF-8

RUN apk update
RUN apk add build-base ca-certificates openssl wget curl bash bash-completion git unzip docker
RUN apk upgrade
RUN update-ca-certificates  2>/dev/null || true
RUN if [ -z ${GLIBC_VERSION+x} ]; then GLIBC_VERSION=$(wget --quiet --output-document - "https://api.github.com/repos/sgerrand/alpine-pkg-glibc/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^\"]+)".*/\1/'); fi && \
     wget --quiet \
         https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk \
         https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-i18n-${GLIBC_VERSION}.apk \
         https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk && \
    apk --allow-untrusted --no-cache add glibc-${GLIBC_VERSION}.apk glibc-bin-${GLIBC_VERSION}.apk glibc-i18n-${GLIBC_VERSION}.apk && \
    rm -f glibc-${GLIBC_VERSION}.apk glibc-bin-${GLIBC_VERSION}.apk glibc-i18n-${GLIBC_VERSION}.apk && \
    /usr/glibc-compat/bin/localedef --force --inputfile ${LANG%.*} --charmap ${LANG#*.} ${LANG}

RUN wget --quiet --output-document /usr/local/bin/kubectl  https://storage.googleapis.com/kubernetes-release/release/$(wget --quiet --output-document - https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && \
    chmod +x /usr/local/bin/kubectl

RUN wget --quiet --output-document /tmp/get_helm.sh https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get && \
    chmod +x /tmp/get_helm.sh && \
    /tmp/get_helm.sh && \ 
    rm -fr /tmp/get_helm.sh

RUN curl -OJL https://github.com/operator-framework/operator-sdk/releases/download/${OPERATOR_RELEASE_VERSION}/operator-sdk-${OPERATOR_RELEASE_VERSION}-x86_64-linux-gnu
RUN chmod +x operator-sdk-${OPERATOR_RELEASE_VERSION}-x86_64-linux-gnu && cp operator-sdk-${OPERATOR_RELEASE_VERSION}-x86_64-linux-gnu /usr/local/bin/operator-sdk && rm operator-sdk-${OPERATOR_RELEASE_VERSION}-x86_64-linux-gnu

ENV IBMCLOUD_VERSION='1.2.3'
RUN wget --quiet -O /tmp/Bluemix_CLI.tar.gz  http://public.dhe.ibm.com/cloud/bluemix/cli/bluemix-cli/${IBMCLOUD_VERSION}/IBM_Cloud_CLI_${IBMCLOUD_VERSION}_amd64.tar.gz && \
    tar -xzvf /tmp/Bluemix_CLI.tar.gz -C /tmp && \
    export PATH=/opt/IBM/cf/bin:$PATH && \
    /tmp/Bluemix_CLI/install_bluemix_cli && \
    rm -rf /tmp/Bluemix_CLI* && \
    ibmcloud config --check-version false && \
    mkdir -p /usr/local/Bluemix/bin/cfcli && \
    mkdir -p /usr/local/ibmcloud/bin/cfcli

RUN ibmcloud plugin install container-service -r Bluemix -v 1.0.233 && \
    ibmcloud plugin install container-registry -r Bluemix -v 0.1.514 && \
    ibmcloud plugin install cloud-functions -r Bluemix -v 1.0.50 && \
    ibmcloud plugin list

RUN mkdir -p /work/component/export
ADD . /work
RUN cp -a /work/scripts/entrypoint.go.sh /work/component/export/entrypoint.sh

ARG JQ_VERSION='1.6'
RUN wget --no-check-certificate https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64 -O /tmp/jq-linux64 \
    && cp /tmp/jq-linux64 /usr/bin/jq \
    && cp /tmp/jq-linux64 /work/component/export/jq \
    && chmod +x /work/component/export/jq \
    && chmod +x /usr/bin/jq \
    && rm -f /tmp/jq-linux64

RUN helm init --client-only

RUN go get -u github.com/FiloSottile/gvt
RUN go get github.com/stretchr/testify/assert
RUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.38.0 && golangci-lint --version
