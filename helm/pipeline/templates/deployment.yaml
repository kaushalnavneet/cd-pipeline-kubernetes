{{- template "common.deployment" (list . "pipeline.deployment") -}}
{{- define "pipeline.deployment" -}}
## Define overrides for your Deployment resource here, e.g.
spec:
  template:
    metadata:
      labels:
        app: test  
      annotations:
        pod.boostport.com/vault-approle: cd-app
        pod.boostport.com/vault-init-container: get-vault-token
    spec:
      imagePullSecrets: 
      - name: otc-registry-secret
      volumes:
      - name: vault-token
        emptyDir: {}
      initContainers:
      - name: get-vault-token
        image: boostport/kubernetes-vault-init
        imagePullPolicy: Always
        env:
        - name: VAULT_ROLE_ID
          value: {{ .Values.vault.roleID }}
        volumeMounts:
        - name: vault-token
          mountPath: /var/run/secrets/boostport.com
      - name: yamltoenv
        image: registry.ng.bluemix.net/opentoolchain/yamltoenv:latest
        env:
        - name: SECRET_PATHS 
          value: {{ .Values.vault.secretPaths }} 
        volumeMounts:
        - name: vault-token
          mountPath: /var/run/secrets/boostport.com
      containers:
      - {{ template "common.container" (list . "pipeline.deployment.container") }}
        volumeMounts:
        - name: vault-token
          mountPath: /var/run/secrets/boostport.com
{{- end -}}
{{- define "pipeline.deployment.container" -}}
## Define overrides for your Container here, e.g.
livenessProbe:
  httpGet:
    path: /
    port: 80
readinessProbe:
  httpGet:
    path: /status
    port: 80
env:
{{ $fullname := include "common.fullname" . }}
{{- range $envvar, $envvarvalue := .Values.configmap.data }}
- {{ template "pipeline.common.envvar.value" (list $envvar $fullname $envvar ) }}
{{- end }}
{{- if .Values.secret }}
{{- range $envvar, $envvarvalue := .Values.secret.data }}
- {{ template "common.envvar.secret" (list $envvar $fullname $envvar) }}
{{- end }}
{{- end }}
{{- end -}}
